{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Jacana\\\\Documents\\\\IPL\\\\PFE\\\\TestReact\\\\src\\\\components\\\\Search.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FilmItem from \"./FilmItem\";\nimport load from \"../../API/TMDBApi\";\n\nvar Search = function Search() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      films = _useState2[0],\n      setFilms = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var searchedFilm = \"\";\n\n  var load_film = function load_film() {\n    setLoading(true);\n    load(searchedFilm).then(function (res) {\n      console.log(res.data.results);\n      setFilms(res.data.results);\n      setLoading(false);\n    });\n  };\n\n  var pressed = function pressed() {\n    console.log(\"Rechercher pressed\");\n    load_film();\n  };\n\n  var displayLoad = function displayLoad() {\n    if (loading) {\n      return React.createElement(View, {\n        style: styles.loading,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.main_container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Titre du film\",\n    style: styles.textinput,\n    onChangeText: function onChangeText(text) {\n      return searchedFilm = text;\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return load_film();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Rechercher\",\n    onPress: pressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: films,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(FilmItem, {\n        props: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), displayLoad());\n};\n\nvar styles = StyleSheet.create({\n  textinput: {\n    marginLeft: 5,\n    marginRight: 5,\n    height: 50,\n    borderColor: '#000000',\n    borderWidth: 1,\n    paddingLeft: 5\n  },\n  main_container: {\n    flex: 1,\n    marginTop: 20\n  },\n  loading: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 100,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/Jacana/Documents/IPL/PFE/TestReact/src/components/Search.js"],"names":["React","useState","FilmItem","load","Search","films","setFilms","loading","setLoading","searchedFilm","load_film","then","res","console","log","data","results","pressed","displayLoad","styles","main_container","textinput","text","item","id","toString","StyleSheet","create","marginLeft","marginRight","height","borderColor","borderWidth","paddingLeft","flex","marginTop","position","left","right","top","bottom","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {StyleSheet,View,TextInput,FlatList,Button, ActivityIndicator} from 'react-native'\r\nimport FilmItem from './FilmItem'\r\nimport load from '../../API/TMDBApi'\r\n\r\nconst Search = () => {\r\n\r\n    const [films,setFilms] = useState([])\r\n    const [loading,setLoading] = useState(false)\r\n    var searchedFilm = \"\"\r\n\r\n    var load_film = () => {\r\n      setLoading(true)\r\n      load(searchedFilm).then(res => {\r\n        console.log(res.data.results)\r\n        setFilms(res.data.results)\r\n        setLoading(false)\r\n      })\r\n    }\r\n\r\n    const pressed = () => {\r\n        console.log(\"Rechercher pressed\")\r\n        load_film();\r\n    }\r\n\r\n    const displayLoad = () => {\r\n      if(loading){\r\n        return(\r\n          <View style={styles.loading}>\r\n            <ActivityIndicator size=\"large\"/>\r\n          </View>\r\n        )\r\n      }\r\n    }\r\n\r\n    return(\r\n        <View style={styles.main_container}>\r\n            <TextInput \r\n              placeholder='Titre du film'\r\n              style={styles.textinput}\r\n              onChangeText= {(text) =>searchedFilm = text} \r\n              onSubmitEditing = {() => load_film()} />\r\n            <Button title='Rechercher' onPress={pressed}/>\r\n            <FlatList\r\n            data={films}\r\n            keyExtractor={(item) => item.id.toString()}\r\n            renderItem={({item}) => <FilmItem props={item}/>}/>\r\n            {displayLoad()}\r\n        </View>\r\n    )\r\n}\r\n\r\n// Components/Search.js\r\n\r\nconst styles = StyleSheet.create({\r\n    textinput: {\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n      height: 50,\r\n      borderColor: '#000000',\r\n      borderWidth: 1,\r\n      paddingLeft: 5\r\n    },\r\n    main_container :{\r\n        flex:1,\r\n        marginTop:20\r\n    },\r\n    loading :{\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: 100,\r\n      bottom: 0,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    }\r\n  })\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}